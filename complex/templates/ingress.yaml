{{- range $componentName, $component := .Values.components -}}
{{- if and (eq $component.type "http") $component.ingress -}}
{{- $kubeLabels := (merge (dict "name" $.Release.Name "instance" (printf "%s-%d" (include "component.name" (dict "name" $componentName "Release" $.Release)) $.Release.Revision) "component" $componentName) $.Values.global.metadata) -}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "component.name" (dict "name" $componentName "Release" $.Release) }}
  labels:
    {{ include "cookielab.kubernetes.labels" $kubeLabels | indent 4 | trim }}
    {{ include "cookielab.kubernetes.labels.selector" $kubeLabels | indent 4 | trim }}
  {{- with $component.ingress.annotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
spec:
  ingressClassName: {{ $component.ingress.className | default "alb" }}
  rules:
  {{- range $component.ingress.hosts }}
  - host: {{ .host | quote }}
    http:
      paths:
      {{- range .paths }}
      - path: {{ .path }}
        pathType: {{ .pathType | default "Prefix" }}
        backend:
          service:
            name: {{ include "component.name" (dict "name" $componentName "Release" $.Release) }}
            port:
              number: {{ .servicePort | default 80 }}
      {{- end }}
  {{- end }}
  {{- with $component.ingress.tls }}
  tls:
    {{- range . }}
    - hosts:
      {{- range .hosts }}
      - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
{{- end -}}
{{- end -}}
